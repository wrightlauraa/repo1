//twitter try#2

import twitter4j.conf.*;
import twitter4j.*;
import twitter4j.auth.*;
import twitter4j.api.*;
import java.util.*;

Twitter twitter;
String searchString = "digital art";
List<Status> tweets;

int currentTweet;


void setup()
{
    size(800,600);

    ConfigurationBuilder cb = new ConfigurationBuilder();
   cb.setOAuthConsumerKey("mlqJLU3l80FsJgIjWW8fsA");
cb.setOAuthConsumerSecret("MrPpYZz7XPUi2wtQ8393Q5KTCOysMux653t3NE1qGw");
cb.setOAuthAccessToken("43789166-lOClOvgeFtxHSU2yudAOpEH2Ls8KWaJSGRCu37NCL");
cb.setOAuthAccessTokenSecret("cprhCJrWFcnW3V0p1IQJyZHKkcWaDnPzPOKGAXbrEI2F0");

    TwitterFactory tf = new TwitterFactory(cb.build());

    twitter = tf.getInstance();
    
    getNewTweets();

    currentTweet = 0;
    
    thread("refreshTweets");
}


void draw()
{
    fill(0, 40);
    rect(0, 0, width, height);

    currentTweet = currentTweet + 1;

    if (currentTweet >= tweets.size())
    {
        currentTweet = 0;
    }

    Status status = tweets.get(currentTweet);

    fill(200);
    text(status.getText(), random(width), random(height), 300, 200);

    delay(250);
}

void getNewTweets()
{
    try 
    {
        Query query = new Query(searchString);

        QueryResult result = twitter.search(query);

        tweets = result.getTweets();
    } 
    catch (TwitterException te) 
    {
        System.out.println("Failed to search tweets: " + te.getMessage());
        System.exit(-1);
    } 
}

void refreshTweets()
{
    while (true)
    {
        getNewTweets();

        println("Updated Tweets"); 

        delay(30000);
    }
}
